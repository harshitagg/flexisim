/*
 * NewNode.java
 *
 * Created on Sep 15, 2010, 2:30:01 AM
 */
package flexisim.node;

import flexisim.views.FlexiSimApp;
import flexisim.views.FlexiSimView;
import flexisim.views.NewProject;
import flexisim.views.TclFile;
import java.text.NumberFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author harshit
 */
public class NewNode extends javax.swing.JDialog {

    String node, prefix;
    int i = 0, flag = 0;
    Number noOfNodes = 0, startingIndex = 0;
    public static TclFile obj = new TclFile();
    private boolean multiNodes, success = true;

    /** Creates new form NewNode */
    public NewNode(java.awt.Frame parent, boolean modal) {
        super(parent);
        initComponents();
        if (NewProject.obpd.getNettype() == 1) {
            // obj.clearNodeConfigWrite();
            // obj.nodeconfigwrite(null, null, null, null,null,null,0,null, null,null, null, null, null, null, 0, 0, 0, null, null, null, null);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodeNameLabel = new javax.swing.JLabel();
        nodeNameTextField = new javax.swing.JTextField();
        newNodeOkButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        multipleNodeCheckBox = new javax.swing.JCheckBox();
        prefixNodeNameLabel = new javax.swing.JLabel();
        prefixNodeNameTextField = new javax.swing.JTextField();
        startingIndexLabel = new javax.swing.JLabel();
        startingIndexFormattedTextField = new javax.swing.JFormattedTextField(NumberFormat.getIntegerInstance());
        noofNodesFormattedTextField = new javax.swing.JFormattedTextField(NumberFormat.getIntegerInstance());
        noOfNodesLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(flexisim.views.FlexiSimApp.class).getContext().getResourceMap(NewNode.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setLocationByPlatform(true);
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        nodeNameLabel.setText(resourceMap.getString("nodeNameLabel.text")); // NOI18N
        nodeNameLabel.setName("nodeNameLabel"); // NOI18N

        nodeNameTextField.setText(resourceMap.getString("nodeNameTextField.text")); // NOI18N
        nodeNameTextField.setName("nodeNameTextField"); // NOI18N

        newNodeOkButton.setText(resourceMap.getString("newNodeOkButton.text")); // NOI18N
        newNodeOkButton.setName("newNodeOkButton"); // NOI18N
        getRootPane().setDefaultButton (newNodeOkButton);
        newNodeOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNodeOkButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        multipleNodeCheckBox.setText(resourceMap.getString("multipleNodeCheckBox.text")); // NOI18N
        multipleNodeCheckBox.setName("multipleNodeCheckBox"); // NOI18N
        multipleNodeCheckBox.setSelected(false);
        multipleNodeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multipleNodeCheckBoxActionPerformed(evt);
            }
        });

        prefixNodeNameLabel.setText(resourceMap.getString("prefixNodeNameLabel.text")); // NOI18N
        prefixNodeNameLabel.setName("prefixNodeNameLabel"); // NOI18N
        prefixNodeNameLabel.setEnabled(false);

        prefixNodeNameTextField.setText(resourceMap.getString("prefixNodeNameTextField.text")); // NOI18N
        prefixNodeNameTextField.setName("prefixNodeNameTextField");
        prefixNodeNameTextField.setEnabled(false);

        startingIndexLabel.setText(resourceMap.getString("startingIndexLabel.text")); // NOI18N
        startingIndexLabel.setName("startingIndexLabel"); // NOI18N
        startingIndexLabel.setEnabled(false);

        startingIndexFormattedTextField.setText(resourceMap.getString("startingIndexFormattedTextField.text")); // NOI18N
        startingIndexFormattedTextField.setName("startingIndexFormattedTextField"); // NOI18N
        startingIndexFormattedTextField.setEnabled(false);

        noofNodesFormattedTextField.setText(resourceMap.getString("noofNodesFormattedTextField.text")); // NOI18N
        noofNodesFormattedTextField.setName("noofNodesFormattedTextField"); // NOI18N
        noofNodesFormattedTextField.setEnabled(false);

        noOfNodesLabel.setText(resourceMap.getString("noOfNodesLabel.text")); // NOI18N
        noOfNodesLabel.setName("noOfNodesLabel"); // NOI18N
        noOfNodesLabel.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nodeNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(nodeNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newNodeOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(multipleNodeCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prefixNodeNameLabel)
                            .addComponent(noOfNodesLabel)
                            .addComponent(startingIndexLabel))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startingIndexFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(noofNodesFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(prefixNodeNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodeNameLabel)
                    .addComponent(nodeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(multipleNodeCheckBox)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noofNodesFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noOfNodesLabel))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefixNodeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prefixNodeNameLabel))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startingIndexLabel)
                    .addComponent(startingIndexFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newNodeOkButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newNodeOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNodeOkButtonActionPerformed
        // TODO add your handling code here:
        if (!multiNodes) {
            node = nodeNameTextField.getText();
            if (node.length() == 0) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame, "Node name must be of atleast 1 character.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            } else if (NewProject.obnm.checkNode(node) == 1) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame, "Node name must be unique.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            } else {
                NewProject.obnm.addNode(node);
                obj.nodeWrite(node);
                FlexiSimView.statusTabbedPane.setSelectedIndex(0);
                FlexiSimView.statusTextArea.append("New node " + node + " created successfully\n");
                NewProject.obpd.setLog("New node " + node + " created successfully\n");
                FlexiSimView.codeTextAreaWrite();
                dispose();
            }
        } else {
            try {
                prefix = prefixNodeNameTextField.getText();
            } catch (NullPointerException ne) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame, "Prefix for the nodes must be specified.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            }
            try {
                noOfNodes = (Number) noofNodesFormattedTextField.getValue();
            } catch (NullPointerException ne) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame, "Number of nodes must be specified.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            }
            try {
                startingIndex = (Number) startingIndexFormattedTextField.getValue();
            } catch (NullPointerException ne) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame, "Starting index must be specified.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            }
            try {
                if (noOfNodes.intValue() == 0) {
                    dispose();
                    JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                    JOptionPane.showMessageDialog(mainFrame, "Number of Nodes must me atleast 1", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
                } else {
                    for (int i = startingIndex.intValue(); i < noOfNodes.intValue() + startingIndex.intValue(); i++) {
                        node = prefix + i;
                        if (NewProject.obnm.checkNode(node) == 1) {
                            dispose();
                            JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                            JOptionPane.showMessageDialog(mainFrame, "Node name must be unique.", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
                            success = false;
                            break;
                        } else {
                            NewProject.obnm.addNode(node);
                            obj.nodeWrite(node);
                        }
                    }
                    if (success) {
                        FlexiSimView.statusTabbedPane.setSelectedIndex(0);
                        FlexiSimView.statusTextArea.append("New nodes have been created successfully\n");
                        NewProject.obpd.setLog("New nodes have been created successfully\n");
                        FlexiSimView.codeTextAreaWrite();
                        dispose();
                    }
                }
            } catch (NullPointerException ne) {
                dispose();
                JFrame mainFrame = FlexiSimApp.getApplication().getMainFrame();
                JOptionPane.showMessageDialog(mainFrame,"Number of Nodes must me atleast 1", "Node Cannot be Created", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_newNodeOkButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void multipleNodeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multipleNodeCheckBoxActionPerformed
        if (multipleNodeCheckBox.isSelected()) {
            multiNodes = true;
        } else {
            multiNodes = false;
        }
        nodeNameLabel.setEnabled(!multiNodes);
        nodeNameTextField.setEnabled(!multiNodes);
        noofNodesFormattedTextField.setEnabled(multiNodes);
        noOfNodesLabel.setEnabled(multiNodes);
        prefixNodeNameLabel.setEnabled(multiNodes);
        prefixNodeNameTextField.setEnabled(multiNodes);
        startingIndexFormattedTextField.setEnabled(multiNodes);
        startingIndexLabel.setEnabled(multiNodes);
    }//GEN-LAST:event_multipleNodeCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewNode dialog = new NewNode(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox multipleNodeCheckBox;
    private javax.swing.JButton newNodeOkButton;
    private javax.swing.JLabel noOfNodesLabel;
    private javax.swing.JLabel nodeNameLabel;
    private javax.swing.JTextField nodeNameTextField;
    private javax.swing.JFormattedTextField noofNodesFormattedTextField;
    private javax.swing.JLabel prefixNodeNameLabel;
    private javax.swing.JTextField prefixNodeNameTextField;
    private javax.swing.JFormattedTextField startingIndexFormattedTextField;
    private javax.swing.JLabel startingIndexLabel;
    // End of variables declaration//GEN-END:variables
}
